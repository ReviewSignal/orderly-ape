environments:
  default:
    values:
      - orderlyApe:
          chartVersion: v0.1.1
          image:
            tag: v0.1.1
      - certManager:
          chartVersion: v1.16.2
      - ingressNginx:
          chartVersion: 4.11.3
      - grafana:
          chartVersion: 8.6.4
      - influxdb:
          chartVersion: 2.1.2
          image:
            tag: 2.7.10-alpine
      - values.yaml
---
repositories:
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: jetstack
    url: https://charts.jetstack.io
  - name: influxdata
    url: https://helm.influxdata.com/
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: k8s-resource
    url: git+https://github.com/ReviewSignal/orderly-ape@deploy/all-in-one/k8s-resource?ref=main

releases:
  - name: cert-manager
    namespace: orderly-ape
    chart: jetstack/cert-manager
    version: "{{ .Values.certManager.chartVersion }}"
    wait: true
    values:
      - crds:
          enabled: true
        global:
          leaderElection:
            namespace: orderly-ape

  - name: orderly-ape-issuer
    namespace: orderly-ape
    chart: k8s-resource/k8s-resource
    # chart: ./k8s-resource
    needs:
      - cert-manager
    values:
      - resources:
         - apiVersion: cert-manager.io/v1
           kind: Issuer
           metadata:
             name: orderly-ape
           spec:
             acme:
               server: https://acme-v02.api.letsencrypt.org/directory
               privateKeySecretRef:
                 name: orderly-ape-issuer-account-key
               solvers:
                 - http01:
                     ingress:
                      ingressClassName: orderly-ape

  - name: ingress-nginx
    namespace: orderly-ape
    chart: ingress-nginx/ingress-nginx
    version: "{{ .Values.ingressNginx.chartVersion }}"
    wait: true
    needs:
      - cert-manager
    values:
      - controller:
          ingressClass: "orderly-ape"
          ingressClassResource:
            name: "orderly-ape"
          watchNamespace: "orderly-ape"

  - name: influxdb
    namespace: orderly-ape
    chart: influxdata/influxdb2
    version: "{{ .Values.influxdb.chartVersion }}"
    needs:
      - ingress-nginx
      - cert-manager
      - orderly-ape-issuer
    values:
      - image:
          tag: {{ .Values.influxdb.image.tag | quote }}
      - nameOverride: influxdb
      - adminUser:
          organization: default
          password: {{ .Values.influxdb.adminPassword | quote }}
      - persistence:
          enabled: true
          size: {{ .Values | get "influxdb.diskSize" "50Gi" | quote }}
      - ingress:
          enabled: true
          className: orderly-ape
          annotations:
            cert-manager.io/issuer: orderly-ape
          hostname: {{ .Values.influxdb.host }}
          tls: true
          secretName: influxdb-tls
      - pdb:
          create: false
      - resources:
          requests:
            memory: 2G
            cpu: 1
          limits:
            memory: 2G

  - name: grafana
    namespace: orderly-ape
    chart: grafana/grafana
    version: "{{ .Values.grafana.chartVersion }}"
    needs:
      - ingress-nginx
      - cert-manager
      - orderly-ape-issuer
    values:
      - adminPassword: {{ .Values.grafana.adminPassword | quote }}
      - ingress:
          enabled: true
          ingressClassName: orderly-ape
          annotations:
            cert-manager.io/issuer: orderly-ape
          hosts:
            - {{ .Values.grafana.host }}
          tls:
            - secretName: grafana-tls
              hosts:
                - {{ .Values.grafana.host }}
      - deploymentStrategy:
          type: Recreate
      - persistence:
          enabled: true
          size: {{ .Values | get "grafana.diskSize" "10Gi" | quote }}
      - extraSecretMounts:
        - name: influxdb
          mountPath: /run/secrets/influxdb
          secretName: influxdb-auth
          readOnly: true
      - datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: InfluxDB
                type: influxdb
                access: proxy
                url: http://influxdb
                jsonData:
                  user: admin
                  version: Flux
                  organization: default
                  defaultBucket: default
                secureJsonData:
                  token: $__file{/run/secrets/influxdb/admin-token}
      - dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
              - name: "default"
                orgId: 1
                folder: ""
                type: file
                disableDeletion: false
                editable: true
                options:
                  path: /var/lib/grafana/dashboards/default
      - dashboards:
          default:
            test-results:
              url: https://raw.githubusercontent.com/ReviewSignal/orderly-ape/main/grafana/test-results.json
              datasource:
                - name: DS_INFLUXDB
                  value: InfluxDB

  - name: orderly-ape-k6-local-bootstrap
    namespace: orderly-ape
    # chart: ./k8s-resource
    chart: k8s-resource/k8s-resource
    values:
      - resources:
          - apiVersion: v1
            kind: Secret
            metadata:
              name: orderly-ape-k6-local-bootstrap
              namespace: orderly-ape
              annotations:
                "helm.sh/hook": pre-install
            data:
              password: {{ .Values.orderlyape.workerBootstrapPassword | b64enc | quote }}

  - name: orderly-ape
    namespace: orderly-ape
    # chart: ../charts/webapp
    chart: oci://ghcr.io/reviewsignal/orderly-ape/charts/orderly-ape
    version: "{{ .Values.orderlyApe.chartVersion }}"
    needs:
      - ingress-nginx
      - cert-manager
      - orderly-ape-issuer
      - influxdb
      - grafana
      - orderly-ape-k6-local-bootstrap
    values:
    - adminPassword: {{ .Values.orderlyape.adminPassword | quote }}
    - image:
        tag: "{{ .Values.orderlyApe.image.tag }}"
    - resources:
        limits:
          memory: "1G"
        requests:
          cpu: "0.5"
          memory: "1G"
    - ingress:
        enabled: true
        className: orderly-ape
        annotations:
          cert-manager.io/issuer: orderly-ape
        hosts:
        - host: {{ .Values.orderlyape.host }}
          paths:
          - path: /
            pathType: Prefix
        tls:
        - secretName: orderly-ape-tls
          hosts:
            - {{ .Values.orderlyape.host }}
    - persistence:
        enabled: true
        size: {{ .Values | get "orderlyape.diskSize" "10Gi" | quote }}
    - env:
      - name: GRAFANA_DASHBOARD_URL
        value: https://{{ .Values.grafana.host }}/d/bdqz4a3k8j08wa?orgId=1
      - name: INFLUXDB_URL
        value: https://{{ .Values.influxdb.host }}
      - name: INFLUXDB_ORG
        value: default
      - name: INFLUXDB_BUCKET
        value: default
      - name: INFLUXDB_TOKEN
        valueFrom:
          secretKeyRef:
            name: influxdb-auth
            key: admin-token
      - name: INITIAL_WORKER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: orderly-ape-k6-local-bootstrap
            key: password

  - name: k6-operator
    namespace: k6-local
    # chart: ../charts/k6-operator
    chart: oci://ghcr.io/reviewsignal/orderly-ape/charts/k6-operator
    version: "{{ .Values.orderlyApe.chartVersion }}"
    needs:
      - orderly-ape/orderly-ape-k6-local-bootstrap
      - orderly-ape/orderly-ape
    values:
      - image:
          tag: "{{ .Values.orderlyApe.image.tag }}"
      - config:
          region: local
          api:
            endpoint: https://{{ .Values.orderlyape.host }}/api
            user: worker-local
            password: {{ .Values.orderlyape.workerBootstrapPassword | quote }}
      - resources:
          limits:
            memory: "1G"
          requests:
            cpu: "0.5"
            memory: "1G"
