name: Build and Publish Docker Images

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: ${{ github.sha }}
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_CLUSTER_LOCATION: ${{ vars.GKE_CLUSTER_LOCATION }}

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west4-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push webapp
        uses: docker/build-push-action@v6
        with:
          context: ./webapp
          push: true
          tags: |
            europe-west4-docker.pkg.dev/calins-playground/orderly-ape/webapp:latest
            europe-west4-docker.pkg.dev/calins-playground/orderly-ape/webapp:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push k6-operator
        uses: docker/build-push-action@v6
        with:
          context: ./k6-operator
          push: true
          tags: |
            europe-west4-docker.pkg.dev/calins-playground/orderly-ape/k6-operator:latest
            europe-west4-docker.pkg.dev/calins-playground/orderly-ape/k6-operator:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to demo site
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Authenticate to google
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}

      # Get the GKE credentials so we can deploy to the cluster
      - name: Connect to the Kubernetes Cluster
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_CLUSTER_LOCATION }}

      - name: Setup Helm
        uses: azure/setup-helm@v4.2.0

      # Deploy the Docker image to the GKE cluster
      - name: Deploy Orderly Ape Webapp and API
        run: helm -n orderly-ape upgrade -i orderly-ape ./deploy/charts/webapp -f ./deploy/demo/orderly-ape.yaml --set image.tag=${{ env.IMAGE_TAG }}

      - name: Deploy Orderly Ape Webapp and API
        run: |
          helm -n k6-eu-amsterdam-gcloud-1 upgrade -i k6-operator ./deploy/charts/k6-operator --set image.tag=${{ env.IMAGE_TAG }} \
            --set config.region=eu-amsterdam-gcloud-1 \
            --set config.api.endpoint=https://orderly-ape.bitpoke.cloud/api \
            --set config.api.user=eu-amsterdam-gcloud-1-worker \
            --set config.api.password=${{ secrets.K6_EU_AMSTERDAM_GCLOUD_1_PASSWORD }}
          helm -n k6-eu-amsterdam-gcloud-2 upgrade -i k6-operator ./deploy/charts/k6-operator --set image.tag=${{ env.IMAGE_TAG }} \
            --set config.region=eu-amsterdam-gcloud-2 \
            --set config.api.endpoint=https://orderly-ape.bitpoke.cloud/api \
            --set config.api.user=eu-amsterdam-gcloud-2-worker \
            --set config.api.password=${{ secrets.K6_EU_AMSTERDAM_GCLOUD_2_PASSWORD }}
